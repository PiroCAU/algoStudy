import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class BOJ_17404 {

    static int N;
    static int[][] list;

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());

        int[][] map = new int[N][3];
        for (int i = 0; i < N; i++) {
            st = new StringTokenizer(br.readLine());
            map[i][0] = Integer.parseInt(st.nextToken());
            map[i][1] = Integer.parseInt(st.nextToken());
            map[i][2] = Integer.parseInt(st.nextToken());
        }

        int result = Integer.MAX_VALUE;

        //첫번째로 선택할 컬러를 지정한다.
        for (int first = 0; first < 3; first++) {
            list = new int[N][3];

            for (int fc = 0; fc < 3; fc++) {
                if (fc == first) {
                    list[0][fc] = map[0][fc];
                } else {
                    list[0][fc] = 1000 * 1000;
                }
            }

            for (int i = 1; i < N ; i++) {
                list[i][0] = Math.min(list[i-1][1], list[i-1][2]) + map[i][0];
                list[i][1] = Math.min(list[i-1][0], list[i-1][2]) + map[i][1];
                list[i][2] = Math.min(list[i-1][0], list[i-1][1]) + map[i][2];
            }


            for (int c = 0; c < 3; c++) {
                if (c != first) {
                    result = Math.min(result, list[N - 1][c]);
                }
            }
        }

        System.out.println(result);
    }
}
